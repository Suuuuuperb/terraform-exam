import "tfconfig/v2" as tfconfig
import "tfplan"
import "strings"
import "types"

# Initialize array of regions found in AWS providers
region_values = []

# Allowed Regions
allowed_regions = "ap-northeast-1"

print ("tfconfig.provider : ", tfconfig.providers)
print ("tfconfig.variables : ", tfconfig.variables)
print ("tfplan.variables : ", tfplan.variables)

if ((length(tfconfig.providers) else 0) > 0) {
  providers = tfconfig.providers
  if "aws" in keys(providers) {
    aws = tfconfig.providers.aws
    regionValues = aws["config"]["region"]["references"]
    print ("regionValues : ", regionValues)
    for regionValues as region, data {
      print ("data : ", data)
      if data == "var.region" {
        variables = tfconfig.variables
        defaultRegion = variables["region"]["default"]
        print ("default region : ", defaultRegion)
        region_values += [defaultRegion]
      }
    }  
  }
}

# Print all regions found in AWS providers
print ( "region_values is: ", region_values )

aws_region_valid = rule {
  all region_values as rv {
    rv in allowed_regions
  }
}

main = rule {
  (aws_region_valid) else true
}